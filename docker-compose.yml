x-autogenerated: This file is autogenerated
version: '3'
volumes:
  db-data: {}
networks:
  local:
    driver: bridge
services:
  rabbitmq:
    image: rabbitmq:3.7.8-management
    networks:
      - local
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: local
    healthcheck:
      test: rabbitmq-diagnostics ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    ports:
      - '5672:5672'
      - '15672:15672'
  postgres:
    image: postgres:11
    networks:
      - local
    environment:
      POSTGRES_DB: taskcluster
      POSTGRES_HOST_AUTH_METHOD: trust
      LC_COLLATE: en_US.UTF8
      LC_CTYPE: en_US.UTF8
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - '5432:5432'
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
  pg_init_db:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      USERNAME_PREFIX: taskcluster
      ADMIN_DB_URL: postgresql://postgres@postgres:5432/taskcluster
    x-info: Run this first to bring database up to date
    command:
      - script/db:upgrade
    depends_on:
      postgres:
        condition: service_healthy
  s3:
    image: minio/minio
    networks:
      - local
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: miniopassword
    command: server /data --console-address :9001
    ports:
      - '3090:9000'
      - '3091:9001'
    volumes:
      - ./docker/buckets:/data
    healthcheck:
      test: curl -I http://localhost:9000/minio/health/cluster
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
  s3_init_buckets:
    image: minio/mc
    networks:
      - local
    environment:
      MINIO_ENDPOINT: http://s3:9000
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: miniopassword
    depends_on:
      s3:
        condition: service_healthy
    entrypoint: /bin/sh -c "/usr/bin/mc config host rm local;/usr/bin/mc config host add --quiet --api s3v4 local http://s3:9000 minioadmin miniopassword;/usr/bin/mc rb --force local/public-bucket/;/usr/bin/mc mb --quiet local/public-bucket/;/usr/bin/mc policy set public local/public-bucket;/usr/bin/mc rb --force local/private-bucket/;/usr/bin/mc mb --quiet local/private-bucket/;/usr/bin/mc policy set public local/public-bucket;"
  ui:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      PORT: 80
      APPLICATION_NAME: Taskcluster
      GRAPHQL_SUBSCRIPTION_ENDPOINT: http://localhost:8080/graphql
      GRAPHQL_ENDPOINT: http://localhost:8080/graphql
      UI_LOGIN_STRATEGY_NAMES: local
      DEBUG: '*'
    command:
      - ui/web
    ports:
      - '3022:80'
  ingress:
    image: nginx:1.21.6
    networks:
      - local
    environment: {}
    depends_on:
      - ui
      - web-server-web
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '8080:80'
  auth-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      TASKCLUSTER_ROOT_URL: http://ingress
      STATIC_CLIENTS: '[{"clientId":"static/taskcluster/built-in-workers","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/github","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/hooks","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/index","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/notify","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/object","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/purge-cache","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/queue","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/secrets","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/web-server","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/worker-manager","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"},{"clientId":"static/taskcluster/root","accessToken":"j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA"}]'
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      DB_CRYPTO_KEYS: '[{"id": "dev-init", "algo": "aes-256", "key": "AUZzegzU1Xp3dW2tPRU615HXI04oJTt9NDIokH3HXN4="}]'
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_HOSTNAME: rabbitmq
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      DEBUG: '*'
    command:
      - auth/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/auth/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3011:80'
  built-in-workers-server:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/built-in-workers
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      LEVEL: debug
      DEBUG: '*'
    command:
      - built-in-workers/server
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      queue-web:
        condition: service_healthy
  github-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      APPLICATION_NAME: Taskcluster
      BOT_USERNAME: ''
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/github
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      GITHUB_PRIVATE_PEM: ''
      GITHUB_APP_ID: ''
      WEBHOOK_SECRET: ''
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      PULSE_HOSTNAME: rabbitmq
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      DEBUG: '*'
    command:
      - github/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/github/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3012:80'
  hooks-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      DB_CRYPTO_KEYS: '[{"id": "dev-init", "algo": "aes-256", "key": "AUZzegzU1Xp3dW2tPRU615HXI04oJTt9NDIokH3HXN4="}]'
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/hooks
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_HOSTNAME: rabbitmq
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      DEBUG: '*'
    command:
      - hooks/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/hooks/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3013:80'
  index-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/index
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      PULSE_HOSTNAME: rabbitmq
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      DEBUG: '*'
    command:
      - index/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/index/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3014:80'
  notify-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      EMAIL_SOURCE_ADDRESS: root@local
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/notify
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: miniopassword
      PULSE_HOSTNAME: rabbitmq
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      DEBUG: '*'
    command:
      - notify/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/notify/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3015:80'
  object-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/object
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      DB_CRYPTO_KEYS: '[{"id": "dev-init", "algo": "aes-256", "key": "AUZzegzU1Xp3dW2tPRU615HXI04oJTt9NDIokH3HXN4="}]'
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      DEBUG: '*'
    command:
      - object/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/object/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      s3_init_buckets:
        condition: service_completed_successfully
    ports:
      - '3016:80'
  purge-cache-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/purge-cache
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      DEBUG: '*'
    command:
      - purge-cache/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/purge-cache/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3017:80'
  queue-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      PUBLIC_ARTIFACT_BUCKET: public-bucket
      PRIVATE_ARTIFACT_BUCKET: private-bucket
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/queue
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_HOSTNAME: rabbitmq
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: miniopassword
      ARTIFACT_REGION: local
      AWS_ENDPOINT: s3://s3:9000
      AWS_FORCE_PATH_STYLE: 'true'
      AWS_SKIP_CORS_CONFIGURATION: 'true'
      DEBUG: '*'
    command:
      - queue/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/queue/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      s3_init_buckets:
        condition: service_completed_successfully
    ports:
      - '3018:80'
  secrets-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/secrets
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      DB_CRYPTO_KEYS: '[{"id": "dev-init", "algo": "aes-256", "key": "AUZzegzU1Xp3dW2tPRU615HXI04oJTt9NDIokH3HXN4="}]'
      LEVEL: debug
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      DEBUG: '*'
    command:
      - secrets/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/secrets/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3019:80'
  web-server-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      PUBLIC_URL: http://localhost:8080
      LEVEL: debug
      PORT: 80
      TRUST_PROXY: 'true'
      TASKCLUSTER_ROOT_URL: http://ingress
      ADDITIONAL_ALLOWED_CORS_ORIGIN: ''
      TASKCLUSTER_CLIENT_ID: static/taskcluster/web-server
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      DB_CRYPTO_KEYS: '[{"id": "dev-init", "algo": "aes-256", "key": "AUZzegzU1Xp3dW2tPRU615HXI04oJTt9NDIokH3HXN4="}]'
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_HOSTNAME: rabbitmq
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      REGISTERED_CLIENTS: '[]'
      UI_LOGIN_STRATEGIES: ''
      SESSION_SECRET: quaYpvahRKmYOz2-wR4jaw
      DEBUG: '*'
    command:
      - web-server/web
    healthcheck:
      test: wget -q --spider http://localhost:3050/api/web-server/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3050:3050'
  worker-manager-web:
    image: taskcluster/taskcluster:v44.16.3
    networks:
      - local
    environment:
      LEVEL: debug
      TASKCLUSTER_ROOT_URL: http://ingress
      TASKCLUSTER_CLIENT_ID: static/taskcluster/worker-manager
      TASKCLUSTER_ACCESS_TOKEN: j2Z6zW2QSLehailBXlosdw9e2Ti8R_Qh2M4buAEQfsMA
      READ_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      WRITE_DB_URL: postgresql://postgres@postgres:5432/taskcluster
      DB_CRYPTO_KEYS: '[{"id": "dev-init", "algo": "aes-256", "key": "AUZzegzU1Xp3dW2tPRU615HXI04oJTt9NDIokH3HXN4="}]'
      PORT: 80
      NODE_ENV: development
      FORCE_SSL: 'false'
      TRUST_PROXY: 'true'
      PULSE_HOSTNAME: rabbitmq
      PULSE_USERNAME: admin
      PULSE_PASSWORD: admin
      PULSE_VHOST: local
      PULSE_AMQPS: 'false'
      PROVIDERS: '{"static":{"providerType":"static"}}'
      DEBUG: '*'
    command:
      - worker-manager/web
    healthcheck:
      test: wget -q --spider http://localhost:80/api/worker-manager/v1/ping
      interval: 2s
      timeout: 4s
      retries: 60
      start_period: 3s
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '3020:80'
